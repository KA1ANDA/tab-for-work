.custom-input-container {

  
  .input-with-icon {
    position: relative;

    &.p-disabled input, 
    .p-component:disabled {
      background-color: rgb(245, 245, 245);
      color: inherit !important; // Keep the default text color
      opacity: 1 ; // Prevents the faded look in some browsers
    }
    label{
      color: #A5B2C0;
    }

    //FLOAT LABEL DESIGN
    ::ng-deep {
      .p-float-label label {
        font-size: 14px;
        transition: top 0.2s, font-size 0.2s, padding-left 0.2s;
    
      }
    
      .p-float-label input.filled ~ label,
      .p-float-label input:focus ~ label {
        top: 15px;
        font-size: 14px;
        white-space: nowrap; /* Prevent text from wrapping */
        overflow: hidden; /* Hide overflow */
        text-overflow: ellipsis; /* Add ellipsis for overflow text */
        width: 100%; /* Ensure the label takes up the full width */
        display: block; /* Ensure the label behaves as a block element */
        padding-right: 30px;
        height: 100%;
    

      }
    
      /* Add padding-left when the input has an icon */
      .p-float-label .has-icon-label {
        padding-left: 30px;
      }
    
      /* No padding when there is no icon */
      .p-float-label label:not(.has-icon-label) {
        padding-left: 0;
      }

 
    }
    ///////////////////////////////////////////

    .input-icon {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      z-index: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      pointer-events: none;
      color: #6c757d;
      
      &.textarea-icon {
        top: 27px; // Adjust for textarea
      }
    }
    
    &:not(.icon-right) .input-icon {
      left: 14px; // Left position for left-aligned icons
    }
    
    &.icon-right .input-icon {
      right: 14px; // Right position for right-aligned icons
    }
    
    input, textarea {
      width: 100%;
      // background-color: red;
      padding-top: 18px;
      resize: none;

      
      &.with-left-icon {
        padding-left: 40px; // Make space for the icon
      }
      
      &.with-right-icon {
        padding-right: 40px; // Make space for the icon
      }

      
    }
  }
  
  // Style tweaks for PrimeNG components
  ::ng-deep {
    .p-inputtext, 
    .p-dropdown,
    .p-calendar {
      width: 100%;
      height: 54px;
      border-radius: 7px;
      box-sizing: border-box;
      transition: box-shadow 0.2s ease-in-out, border-color 0.2s ease-in-out;
      
      &:focus {
        box-shadow: 0 0 0 3px rgba(7, 141, 238, 0.2);
        
      }
      
      &.ng-invalid.ng-touched {
        border-color: #f44336;
      }

      &:not(:focus):not(:disabled):hover{
        box-shadow: 0 0 0 3px rgba(7, 141, 238, 0.2); 
        border:1px solid rgb(227, 231, 237);
      }

      
    }
    
    .p-dropdown {
      .p-dropdown-label {
        padding: 12px;
      }
      
      &.with-left-icon .p-dropdown-label {
        padding-left: 40px;
      }
      
      &.with-right-icon .p-dropdown-label {
        padding-right: 40px;
      }
    }
    
    .p-calendar {
      .p-inputtext {
        padding: 12px;
      }
      
      &.with-left-icon .p-inputtext {
        padding-left: 40px;
      }
      
      &.with-right-icon .p-inputtext {
        padding-right: 40px;
      }
    }
    
  }
  
  // CHECKBOX //

  ::ng-deep {
    .p-checkbox .p-checkbox-box {
      box-sizing: border-box;
      border: 1px solid #e3e7ed;
      width: 24px;
      height: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: box-shadow 0.2s ease-in-out;
      position: relative;

      &:active {
        border-color: #143fbf;

        &:not(.p-highlight):hover::after {
          opacity: 1;
          background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='11' height='9' viewBox='0 0 11 9' fill='none'%3E%3Cpath d='M1 3.7L4.19355 7L10 1' stroke='%23143FBF' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E");
        }
      }

      &:hover,
      &:hover .p-highlight {
        box-shadow: 0 0 0 0.2rem #BFDBFE;
      }

      &:not(.p-highlight):hover::after {
        content: "";
        position: absolute;
        width: 11px;
        height: 9px;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='11' height='9' viewBox='0 0 11 9' fill='none'%3E%3Cpath d='M1 3.7L4.19355 7L10 1' stroke='%23E3E7ED' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E");
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center;
        opacity: 0.5;
        transition: opacity 0.2s ease-in-out;
      }

      &.p-highlight {
        background: none;
      }
    }

    .p-checkbox .p-checkbox-box .p-icon {
      display: none;
    }

    .p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box.p-focus {
      outline: 0 none;
      outline-offset: 0;
      box-shadow: none;
    }

    .p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box.p-focus:hover {
      box-shadow: 0 0 0 0.2rem #BFDBFE;
    }

    .p-checkbox .p-checkbox-box.p-highlight::after {
      content: "";
      position: absolute;
      width: 11px;
      height: 9px;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='11' height='9' viewBox='0 0 11 9' fill='none'%3E%3Cpath d='M1 3.7L4.19355 7L10 1' stroke='%23143FBF' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E");
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
    }

    .p-checkbox.p-checkbox-disabled .p-checkbox-box {
      background-color: #F5F5F5;
      opacity: 1;
    }

    .p-checkbox.p-checkbox-disabled + label {
      opacity: 1;
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  
  .error-message {
    color: #f44336;
    font-size: 12px;
    margin-top: 5px;
  }
}